@page "/register"
@using BlessedRSI.Web.Models
@using System.Text.Json
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Join BlessedRSI - Faith-Based Investing</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h3 class="mb-0">
                        <i class="fas fa-users me-2"></i>
                        Join the Fellowship
                    </h3>
                    <p class="mb-0 opacity-75">Start your faith-based investing journey</p>
                </div>
                
                <div class="card-body p-4">
                    <!-- Welcome message -->
                    <div class="text-center mb-4">
                        <blockquote class="blockquote-footer small">
                            <em>"Where two or three gather in my name, there am I with them." - Matthew 18:20</em>
                        </blockquote>
                    </div>

                    <EditForm Model="registerRequest" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="firstName" class="form-label">First Name</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-user"></i>
                                    </span>
                                    <InputText @bind-Value="registerRequest.FirstName" class="form-control" 
                                              id="firstName" placeholder="John" />
                                </div>
                                <ValidationMessage For="() => registerRequest.FirstName" />
                            </div>
                            
                            <div class="col-md-6 mb-3">
                                <label for="lastName" class="form-label">Last Name</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-user"></i>
                                    </span>
                                    <InputText @bind-Value="registerRequest.LastName" class="form-control" 
                                              id="lastName" placeholder="Smith" />
                                </div>
                                <ValidationMessage For="() => registerRequest.LastName" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-envelope"></i>
                                </span>
                                <InputText @bind-Value="registerRequest.Email" class="form-control" 
                                          id="email" placeholder="your.email@example.com" />
                            </div>
                            <ValidationMessage For="() => registerRequest.Email" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                <InputText @bind-Value="registerRequest.Password" type="password" 
                                          class="form-control" id="password" placeholder="Create a strong password" />
                            </div>
                            <div class="form-text">
                                <small>Must contain uppercase, lowercase, number, and special character (8+ chars)</small>
                            </div>
                            <ValidationMessage For="() => registerRequest.Password" />
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                <InputText @bind-Value="registerRequest.ConfirmPassword" type="password" 
                                          class="form-control" id="confirmPassword" placeholder="Confirm your password" />
                            </div>
                            <ValidationMessage For="() => registerRequest.ConfirmPassword" />
                        </div>

                        <div class="mb-3">
                            <label for="favoriteVerse" class="form-label">
                                Favorite Bible Verse <small class="text-muted">(Optional)</small>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-bible"></i>
                                </span>
                                <InputText @bind-Value="registerRequest.FavoriteVerse" class="form-control" 
                                          id="favoriteVerse" placeholder="e.g., Proverbs 3:5-6" />
                            </div>
                            <div class="form-text">
                                <small>Share a verse that inspires your financial journey</small>
                            </div>
                        </div>

                        <!-- Subscription tier selection -->
                        <div class="mb-4">
                            <label class="form-label">Choose Your Starting Plan</label>
                            <div class="row g-2">
                                <div class="col-md-6">
                                    <div class="card border-primary">
                                        <div class="card-body text-center">
                                            <h6 class="card-title text-primary">
                                                <i class="fas fa-seedling"></i> Seeker
                                            </h6>
                                            <p class="card-text small">
                                                <strong>Free</strong><br>
                                                3 backtests/day<br>
                                                Community access
                                            </p>
                                            <input type="radio" name="tier" value="seeker" checked class="form-check-input">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card border-warning">
                                        <div class="card-body text-center">
                                            <h6 class="card-title text-warning">
                                                <i class="fas fa-star"></i> Believer
                                            </h6>
                                            <p class="card-text small">
                                                <strong>$29/month</strong><br>
                                                Unlimited backtests<br>
                                                Advanced analytics
                                            </p>
                                            <input type="radio" name="tier" value="believer" class="form-check-input">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3 form-check">
                            <InputCheckbox @bind-Value="registerRequest.AgreeToTerms" class="form-check-input" id="agreeTerms" />
                            <label class="form-check-label" for="agreeTerms">
                                I agree to the <a href="/terms" target="_blank">Terms of Service</a> and 
                                <a href="/privacy" target="_blank">Privacy Policy</a>
                            </label>
                            <ValidationMessage For="() => registerRequest.AgreeToTerms" />
                        </div>

                        <div class="mb-3 form-check">
                            <InputCheckbox @bind-Value="registerRequest.SubscribeToNewsletter" class="form-check-input" id="newsletter" />
                            <label class="form-check-label" for="newsletter">
                                Subscribe to daily devotionals and market insights
                            </label>
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle"></i>
                                @errorMessage
                            </div>
                        }

                        @if (errors.Any())
                        {
                            <div class="alert alert-danger">
                                <ul class="mb-0">
                                    @foreach (var error in errors)
                                    {
                                        <li>@error</li>
                                    }
                                </ul>
                            </div>
                        }

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <i class="fas fa-spinner fa-spin"></i> Creating Account...
                                }
                                else
                                {
                                    <i class="fas fa-user-plus"></i> Join BlessedRSI
                                }
                            </button>
                        </div>
                    </EditForm>
                </div>

                <div class="card-footer bg-light text-center py-3">
                    <small class="text-muted">
                        Already have an account? 
                        <a href="/login" class="text-decoration-none fw-bold">
                            Sign in here
                        </a>
                    </small>
                </div>
            </div>

            <!-- Security notice -->
            <div class="text-center mt-4">
                <small class="text-muted">
                    <i class="fas fa-shield-alt text-success"></i>
                    Your information is secured with bank-level encryption
                </small>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterRequest registerRequest = new();
    private string errorMessage = "";
    private List<string> errors = new();
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        errorMessage = "";
        errors.Clear();

        try
        {
            var response = await JSRuntime.InvokeAsync<string>("fetch", "/api/auth/register", new
            {
                method = "POST",
                headers = new
                {
                    Content_Type = "application/json"
                },
                body = JsonSerializer.Serialize(registerRequest)
            });

            var responseData = JsonSerializer.Deserialize<AuthResponse>(response);

            if (responseData?.Success == true)
            {
                // Store access token
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "accessToken", responseData.AccessToken);
                
                // Show success message and redirect
                await JSRuntime.InvokeVoidAsync("alert", "Welcome to BlessedRSI! Your account has been created successfully.");
                Navigation.NavigateTo("/dashboard", forceLoad: true);
            }
            else
            {
                errorMessage = responseData?.Message ?? "Registration failed. Please try again.";
                if (responseData?.Errors != null && responseData.Errors.Any())
                {
                    errors = responseData.Errors;
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during registration. Please try again.";
            Console.WriteLine($"Registration error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}

<style>
    .card {
        border-radius: 1rem;
    }
    
    .card-header {
        border-radius: 1rem 1rem 0 0 !important;
    }
    
    .input-group-text {
        background-color: #f8f9fa;
        border-right: none;
    }
    
    .form-control {
        border-left: none;
    }
    
    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #0d6efd, #0b5ed7);
        border: none;
    }
    
    .btn-primary:hover {
        background: linear-gradient(135deg, #0b5ed7, #0a58ca);
    }
    
    .card.border-primary {
        border-width: 2px !important;
    }
    
    .card.border-warning {
        border-width: 2px !important;
    }
</style>